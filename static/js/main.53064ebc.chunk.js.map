{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAdd","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","color","onClick","style","backgroundColor","defaultProps","propsTypes","PropTypes","string","func","Header","title","showAdd","Task","task","onDelete","onToggle","onDoubleClick","id","cursor","Tasks","tasks","map","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53064ebc.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Add Task' \r\n                    value={text} \r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Add Day & Time' \r\n                    value={day} \r\n                    onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input \r\n                    type='checkbox' \r\n                    checked={reminder}\r\n                    value={reminder} \r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n            <input type='submit' value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n    return (\r\n    <button \r\n        style={{ backgroundColor: color }} \r\n        className='btn'\r\n        onClick={onClick}\r\n        >{text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propsTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    \r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button \r\n                color={showAdd ? 'red' : 'green'} \r\n                text={showAdd ? 'Close' : 'Add'} \r\n                onClick={onAdd}\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div \r\n            className={`task ${task.reminder ? 'reminder' : ''}`} \r\n            onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} \r\n                <FaTimes \r\n                    style={{color: 'red', cursor: 'pointer'}} \r\n                    onClick={() => onDelete(task.id)}\r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n          {tasks.map((task) => (\r\n            <Task \r\n              key={task.id} \r\n              task={task} \r\n              onDelete={onDelete} \r\n              onToggle={onToggle}\r\n            />\r\n          ))}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\nimport AddTask from './components/AddTask'\r\nimport Header from \"./components/Header\"\r\nimport Tasks from \"./components/Tasks\"\r\n\r\nconst App = () => {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      \"id\": 1,\r\n      \"text\": \"Doctrors Appointment\",\r\n      \"day\": \"Feb 5th at 2:30pm\",\r\n      \"reminder\": true\r\n    },\r\n    {\r\n      \"id\": 2,\r\n      \"text\": \"Meeting at School\",\r\n      \"day\": \"Feb 6th at 1:30pm\",\r\n      \"reminder\": true\r\n    },\r\n    {\r\n      \"text\": \"Test 123\",\r\n      \"day\": \"Mar 5th at 3:15pm\",\r\n      \"reminder\": false,\r\n      \"id\": 3\r\n    }\r\n  ])\r\n\r\n  // Add task\r\n  const addTask = (task) => {\r\n    const id = Math.floor(Math.random() * 100000) + 1\r\n\r\n    const newTask = {id, ...task}\r\n    setTasks([...tasks, newTask])\r\n  }\r\n\r\n  // Delete task\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  // Toggle reminder\r\n  const toggleReminder = (id) => {\r\n    setTasks(\r\n      tasks.map((task) => \r\n        task.id === id ? {...task, reminder: \r\n        !task.reminder} : task\r\n      )\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <Header \r\n        onAdd={() => \r\n        setShowAddTask(!showAddTask)} \r\n        showAdd={showAddTask}\r\n      />\r\n      {showAddTask && <AddTask onAdd={addTask}/>}\r\n      {tasks.length > 0 ? (\r\n      <Tasks \r\n        tasks={tasks}\r\n        onDelete={deleteTask}\r\n        onToggle={toggleReminder}\r\n      />\r\n      ) : (\r\n        \"No Tasks To Show\"\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
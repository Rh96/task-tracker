{"version":3,"sources":["components/AddTask.js","components/Button.js","components/Header.js","components/About.js","components/Footer.js","components/Task.js","components/Tasks.js","App.js","reportWebVitals.js","index.js"],"names":["AddTask","onAdd","useState","text","setText","day","setDay","reminder","setReminder","className","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Button","color","onClick","style","backgroundColor","defaultProps","propsTypes","PropTypes","string","func","Header","title","showAdd","location","useLocation","pathname","About","to","Footer","Task","task","onDelete","onToggle","onDoubleClick","id","cursor","Tasks","tasks","map","index","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToggle","updTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0df6fb1f.chunk.js","sourcesContent":["import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Add Task' \r\n                    value={text} \r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input \r\n                    type='text' \r\n                    placeholder='Add Day & Time' \r\n                    value={day} \r\n                    onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input \r\n                    type='checkbox' \r\n                    checked={reminder}\r\n                    value={reminder} \r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n            <input type='submit' value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import PropTypes from 'prop-types'\r\n\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n    return (\r\n    <button \r\n        style={{ backgroundColor: color }} \r\n        className='btn'\r\n        onClick={onClick}\r\n        >{text}\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propsTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport { useLocation } from 'react-router-dom'\r\nimport Button from \"./Button\"\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    const location = useLocation()\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            {location.pathname === '/' && <Button \r\n                color={showAdd ? 'red' : 'green'} \r\n                text={showAdd ? 'Close' : 'Add'} \r\n                onClick={onAdd}\r\n            />}\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Header\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Vresion: 1.0.0</h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; 2021</p>\r\n            <Link to='/about'>About</Link>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div \r\n            className={`task ${task.reminder ? 'reminder' : ''}`} \r\n            onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text} \r\n                <FaTimes \r\n                    style={{color: 'red', cursor: 'pointer'}} \r\n                    onClick={() => onDelete(task.id)}\r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n          {tasks.map((task, index) => (\r\n            <Task \r\n                key={index} \r\n                task={task} \r\n                onDelete={onDelete}\r\n                onToggle={onToggle}\r\n            />\r\n          ))}  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport AddTask from './components/AddTask'\r\nimport Header from \"./components/Header\"\r\nimport About from './components/About'\r\nimport Footer from \"./components/Footer\"\r\nimport Tasks from \"./components/Tasks\"\r\n\r\nconst App = () => {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks()\r\n      setTasks(tasksFromServer)\r\n    }\r\n    getTasks()\r\n  }, [])\r\n\r\n  // Fetch Tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch('http://localhost:5000/tasks')\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n  // Fetch Task\r\n  const fetchTask = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n  // Add task\r\n  const addTask = async (task) => {\r\n    const res = await fetch('http://localhost:5000/tasks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks([...tasks, data])\r\n\r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // const newTask = {id, ...task}\r\n    // setTasks([...tasks, newTask])\r\n  }\r\n\r\n  // Delete task\r\n  const deleteTask = async (id) => {\r\n    await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'DELETE'\r\n    })\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  }\r\n\r\n  // Toggle reminder\r\n  const toggleReminder = async (id) => {\r\n    const taskToggle = await fetchTask(id)\r\n    const updTask = {...taskToggle, reminder: !taskToggle.reminder }\r\n\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updTask)\r\n    })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks(tasks.map((task) => \r\n      task.id === id ? {...task, reminder: data.reminder} : task))\r\n    }\r\n  return (\r\n    <Router>\r\n      <div className=\"container\">\r\n        <Header \r\n          onAdd={() => setShowAddTask(!showAddTask)} \r\n          showAdd={showAddTask}/>\r\n        <Route path='/' exact render={(props) => (\r\n          <>\r\n            {showAddTask && <AddTask onAdd={addTask}/>}\r\n            {tasks.length > 0 ? (\r\n            <Tasks \r\n            tasks={tasks} \r\n            onDelete={deleteTask}\r\n            onToggle={toggleReminder}/>\r\n            ) : ('No Tasks To Show'\r\n          )}\r\n          </>\r\n        )}/>\r\n        <Route path='/about' component={About}/>\r\n        <Footer />\r\n      </div>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}